# link container on quay with qiime2
container_image = docker://quay.io/qiime2/amplicon:2025.4

#reference sh script
arguments = $(netid) $(project)
executable = 01_demux.sh
staging_path = file:///staging/$(netid)/$(project)/input_outputs

#state path to input files
transfer_input_files = \
  $(staging_path)/00_pipeline_inputs/emp-single-end-sequences.tar.gz, \
  $(staging_path)/00_pipeline_inputs/sample-metadata.tsv

#state the output files
transfer_output_files = emp-single-end-sequences.qza, demux.qza, demux.qzv

#remap outputs to desired location
transfer_output_remaps = \
  "emp-single-end-sequences.qza = $(staging_path)/01_import-demux/emp-single-end-sequences.qza; \
  demux.qza = $(staging_path)/01_import-demux/demux.qza; \
  demux.qzv = $(staging_path)/01_import-demux/demux.qzv"

#create log/err/out files
log = logs/01_demux$(cluster).log
error = logs/01_demux$(cluster).err
output = logs/01_demux$(cluster).out

#set requirements
requirements = (HasCHTCStaging == true) && (HasChtcProjects == true) && (OpSysMajorVer > 7) 

#make requests and queue
request_cpus = 8
request_memory = 12GB
request_disk = 12GB

queue
